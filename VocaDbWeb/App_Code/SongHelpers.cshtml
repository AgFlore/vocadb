@inherits VocaDb.Web.Code.HelperPage
@using System.Globalization
@using System.Web.Mvc.Html;
@using VocaDb.Model.DataContracts.Songs;
@using VocaDb.Model.Service.Search.AlbumSearch
@using VocaDb.Model.Utils
@using VocaDb.Web.Helpers;

@helper ArtistParticipationStatusOptionsKnockout(string binding) {
	{
		var options = new Dictionary<string, string> {
			{ ArtistAlbumParticipationStatus.Everything.ToString(), "Everything" },
			{ ArtistAlbumParticipationStatus.OnlyMainAlbums.ToString(), "Only main songs" },
			{ ArtistAlbumParticipationStatus.OnlyCollaborations.ToString(), "Only collaborations" },
		};
		@KnockoutHelpers.CheckBoxButtons(options, binding)
	}
}

@helper LyricsInfo(LyricsForSongContract lyrics) {
	@:@lyrics.TranslationType
	if (!string.IsNullOrEmpty(lyrics.CultureCode)) {
		@:(@CultureInfo.GetCultureInfo(lyrics.CultureCode).EnglishName)
	}
	if (!string.IsNullOrEmpty(lyrics.Source)) {
		@:(@lyrics.Source)
	}
}

@helper PVPreviewKnockout(string getPvServiceIcons) {
	<div data-bind="slideVisible: preview, complete: destroyPV" class="pvPreview" style="display: none;">
		<div data-bind="with: ratingButtons" class="pull-right">
			@{ Html.RenderPartial("Partials/_PVRatingButtonsForIndex"); }
			
			<!-- Binding context: SongWithPreviewViewModel -->
			@* PV service switcher *@
			<div class="btn-toolbar">
				<div class="btn-group">
					<div data-bind="visible: $parent.pvServices && $parent.pvServices.indexOf(',') > 0, foreach: @(getPvServiceIcons)($parent.pvServices)" class="pv-preview-services">
						<a class="btn" data-bind="click: function () { $parents[1].switchPV(service); }, attr: { title: service }, css: { active: service == $parents[1].pvService() }">
							<img data-bind="attr: { src: url }" />
						</a>
					</div>
				</div>
			</div>
		</div>
		<div data-bind="html: previewHtml"></div>
	</div>
}

@helper SongIconLink(SongContract song, int? albumId = null) {
	<a href="@Url.Action("Details", "Song", ViewHelper.GetRouteParams(song, albumId))">
		<img src="@VocaDb.Model.Service.Helpers.UrlHelper.UpgradeToHttps(song.ThumbUrl)" alt="Cover" class="coverPicThumb" referrerpolicy="same-origin"/>
	</a>		
}

@helper SongLink(SongContract song, int? albumId = null, bool tooltip = false) {
	@Html.ActionLink(song.Name, "Details", "Song", ViewHelper.GetRouteValueDictionary(song, albumId), new Dictionary<string, object> { { "title", song.AdditionalNames }, { "data-bind", tooltip ? "songToolTip: " + song.Id : null } })
}

@helper SongLink(SongForApiContract song, int? albumId = null) {
	<a href="@Url.SongDetails(song, albumId)" title="@song.AdditionalNames">
		@song.Name
	</a>
}

@helper SongLinkKnockout(string binding, string extUrlBinding = null, bool tooltip = false, string toolTipDomainBinding = null) {
	<a href="#" data-bind="attr: { href: @extUrlBinding || vdb.utils.EntryUrlMapper.details_song(@binding), title: @(binding).additionalNames }, text: @(binding).name, css: { extLink: @extUrlBinding } @(tooltip ? ", songToolTip: " + binding + ".id" : "") @(toolTipDomainBinding != null ? ", toolTipDomain: " + toolTipDomainBinding : "")"></a>
}

@helper SongListsKnockout(string binding, bool groupByYear = false) {
	
	<table class="table table-striped">
		<tbody data-bind="foreach: @Html.Raw(binding)">
			<!-- ko if: @(groupByYear ? "true" : "false") && $parent.isFirstForYear($data, $index()) -->
			<tr>
				<td colspan="3">
					<h3 class="song-list-year">{{ $data.eventDate | formatDate: 'YYYY' }}</h3>
				</td>
			</tr>
			<!-- /ko -->
			<tr>
				<td style="width: 75px">
					<a href="#" data-bind="visible: $data.mainPicture && mainPicture.urlSmallThumb, attr: { href: vdb.utils.EntryUrlMapper.details('SongList', id) }">
						<img class="coverPicThumb" alt="Picture" data-bind="attr: { src: $data.mainPicture ? mainPicture.urlSmallThumb : '' }" />
					</a>
				</td>
				<td>
					<a href="#" data-bind="attr: { href: vdb.utils.EntryUrlMapper.details('SongList', id) }">{{ name }}</a>
					<div visible="{{ $data.eventDate }}">
						<small>{{ $data.eventDate | formatDate: 'l' }}</small>
					</div>
				</td>
				<td data-bind="if: $parent.showTags() && $data.tags" class="search-tags-column">
					<div data-bind="visible: tags.length">
						<i class="icon icon-tags fix-icon-margin"></i>
						<!-- ko foreach: tags -->
						<a href="#" data-bind="text: tag.name, click: function() { $parents[1].selectTag(tag); return false; }"></a><span data-bind="visible: $data != _.last($parent.tags)">,</span>
						<!-- /ko -->
					</div>
				</td>
			</tr>
		</tbody>
	</table>

}

@helper SongTypesDropdownKnockout(string binding) {
	@KnockoutHelpers.CheckBoxButtons(Translate.SongTypeNames.GetValuesAndNamesStrings(AppConfig.SongTypes), binding);
}