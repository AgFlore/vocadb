@inherits VocaDb.Web.Code.HelperPage
@using System.Web.Mvc.Html;
@using Microsoft.Web.Helpers
@using VocaDb.Model.DataContracts.Users
@using VocaDb.Model.Domain.Images
@using VocaDb.Model.Domain.Users
@using VocaDb.Model.Helpers
@using VocaDb.Web.Helpers
@using VocaDb.Web.Models.Shared.Partials.User;

@functions {

	static string GetImageSizeProperty(ImageSize size) {
		switch (size) {
			case ImageSize.Thumb:
				return "urlThumb";
			case ImageSize.SmallThumb:
				return "urlSmallThumb";
			case ImageSize.TinyThumb:
				return "urlTinyThumb";
		}
		return "urlThumb";
	}

}

@helper ProfileIconKnockout(string binding, int size = 80) {
	<div data-bind="visible: @binding" style="width: @(size)px; height: @(size)px; display: inline-block">
		<img data-bind="attr: { src: @binding }" alt="User avatar" src="@Url.Content("~/Content/unknown.png")" />
	</div>
}


@helper ProfileIcon(string url, int size = ImageHelper.UserThumbSize) {
	if (!string.IsNullOrEmpty(url)) {
		<div style="width: @(size)px; height: @(size)px; display: inline-block">
			<img src="@url" alt="Icon" />
		</div>
	}
}

@helper ProfileIcon(IUserWithEmail user, int size = 80) {
	if (user != null && !string.IsNullOrEmpty(user.Email)) {
		<div style="width: @(size)px; height: @(size)px; display: inline-block">
			@Gravatar.GetHtml(user.Email, size, scheme: RequestUrlScheme)
		</div>
	}
}

@helper ProfileIconKnockout(ImageSize imageSize = ImageSize.TinyThumb, string binding = "$data", int size = 0) {
	@ProfileIconKnockout(binding + ".mainPicture != null ? " + binding + ".mainPicture." + GetImageSizeProperty(imageSize) + " : null", size > 0 ? size : ImageHelper.GetUserImageSizePx(imageSize))
}

@helper UserIconLink(IUserWithEmail user, int size = ImageHelper.UserTinyThumbSize) {
	<a href="@Url.UserDetails(user)">@ProfileIcon(user, size)<span>@(user != null ? user.Name : "")</span></a>
}

@helper UserIconLink(UserContract user, int size = ImageHelper.UserTinyThumbSize, bool userInfo = false, bool tooltip = false) {
	<a href="@Url.UserDetails(user)" @Html.ConditionalAttribute(tooltip && user != null, "data-bind", "userToolTip: " + (user != null ? user.Id : 0)) 
	   title='@(userInfo && user != null ? (Translate.UserGroups[user.GroupId] + "\nJoined: " + user.CreateDate.ToShortDateString()) : "")'>@ProfileIcon(user, size)<span>@(user != null ? user.Name : "")</span></a>
}

@helper UserIconLink(UserForApiContract user, int size = ImageHelper.UserTinyThumbSize, bool userInfo = false, bool tooltip = false) {
	<a href="@Url.UserDetails(user)" @Html.ConditionalAttribute(tooltip && user != null, "data-bind", "userToolTip: " + (user != null ? user.Id : 0)) 
	   title='@(userInfo && user != null ? (Translate.UserGroups[user.GroupId] + "\nJoined: " + user.MemberSince.ToShortDateString()) : "")'>
		@ProfileIcon(user != null && user.MainPicture != null ? user.MainPicture.GetSmallestThumb(ImageSize.TinyThumb) : null, size)
		<span>@(user != null ? user.Name : "")</span>
	</a>
}

@helper UserIconLinkOrName(UserForApiContract user, string name, int size = 20) {
	if (user != null) {
		@UserIconLink(user, size)
	} else {
		@name
	}
}

@helper UserIconLinkOrName(IUserWithEmail user, string name, int size = 20) {
if (user != null) {
		@UserIconLink(user, size)
	} else {
		@name
	}
}