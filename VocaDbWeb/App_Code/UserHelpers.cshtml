@inherits VocaDb.Web.Code.HelperPage
@using Microsoft.Web.Helpers
@using VocaDb.Model.Domain.Images
@using VocaDb.Model.Domain.Users
@using VocaDb.Model.Helpers
@using VocaDb.Web.Helpers

@functions {

	static string GetImageSizeProperty(ImageSize size) {
		switch (size) {
			case ImageSize.Thumb:
				return "urlThumb";
			case ImageSize.SmallThumb:
				return "urlSmallThumb";
			case ImageSize.TinyThumb:
				return "urlTinyThumb";
		}
		return "urlThumb";
	}

}

@helper ProfileIconKnockout(string binding, int size = 80) {
	<div data-bind="visible: @binding" style="width: @(size)px; height: @(size)px; display: inline-block">
		<img data-bind="attr: { src: @binding }" alt="User avatar" src="@Url.Content("~/Content/unknown.png")" />
	</div>
}


@helper ProfileIcon(string url, int size = ImageHelper.UserThumbSize) {
	if (!string.IsNullOrEmpty(url)) {
		<div style="width: @(size)px; height: @(size)px; display: inline-block">
			<img src="@url" alt="Icon" />
		</div>
	}
}

@helper ProfileIcon_IUserWithEmail(IUserWithEmail user, int size = 80) {
	if (user != null && !string.IsNullOrEmpty(user.Email)) {
		<div style="width: @(size)px; height: @(size)px; display: inline-block">
			@Gravatar.GetHtml(user.Email, size, scheme: RequestUrlScheme)
		</div>
	}
}

@helper ProfileIconKnockout(ImageSize imageSize = ImageSize.TinyThumb, string binding = "$data", int size = 0) {
	@ProfileIconKnockout(binding + ".mainPicture != null ? " + binding + ".mainPicture." + GetImageSizeProperty(imageSize) + " : null", size > 0 ? size : ImageHelper.GetUserImageSizePx(imageSize))
}

@helper UserIconLink_IUserWithEmail(IUserWithEmail user, int size = ImageHelper.UserTinyThumbSize) {
	<a href="@Url.UserDetails(user)">@ProfileIcon_IUserWithEmail(user, size)<span>@(user != null ? user.Name : "")</span></a>
}