@inherits VocaDb.Web.Code.HelperPage
@using System.Web.Mvc.Html;
@using Autofac.Integration.Mvc
@using Microsoft.Web.Helpers
@using Resources
@using VocaDb.Model.DataContracts.Users
@using VocaDb.Model.Domain.Images
@using VocaDb.Model.Domain.Users
@using VocaDb.Model.Helpers
@using VocaDb.Web.Helpers

@helper IconAndName(IUserWithEmail user, int size = 20) {
	@ProfileIcon(user, size)
	<span>@user.Name</span>
}

@helper IconAndName(IUserWithEmail user, string name, int size = 20) {
	if (user != null) {	
		@IconAndName(user, size)
	} else {
		@name
	}
}

@helper IconAndNameKnockout(string iconBinding, string nameBinding, int size = 20) {
	@ProfileIconKnockout(iconBinding, size)
	<span data-bind="text: @nameBinding"></span>
}

@helper IconNameAndTypeLinkKnockout(string groupResources, int iconSize = 20) {
	<a href="#" data-bind="attr: { href: '/User/Profile/' + name, title: @(groupResources + "[groupId] + '\\nJoined: ' + memberSince") }">
		@ProfileIconKnockout("mainPicture.urlThumb", iconSize)
		<span data-bind="text: name"></span>
	</a>
}

@helper ProfileIcon(string url, int size = ImageHelper.UserThumbSize) {
	if (!string.IsNullOrEmpty(url)) {
		<div style="width: @(size)px; height: @(size)px; display: inline-block">
			<img src="@url" alt="Icon" />
		</div>
	}
}

@helper ProfileIcon(IUserWithEmail user, int size = 80) {
	if (user != null && !string.IsNullOrEmpty(user.Email)) {
		<div style="width: @(size)px; height: @(size)px; display: inline-block">
			@Gravatar.GetHtml(user.Email, size, scheme: RequestUrlScheme)
		</div>
	}
}

@helper ProfileIconKnockout(string binding, int size = 80) {
	<div data-bind="visible: @binding" style="width: @(size)px; height: @(size)px; display: inline-block">
		<img data-bind="attr: { src: @binding }" alt="User avatar" src="@Url.Content("~/Content/unknown.png")" />
	</div>
}

@helper SongVoteRatingsRadioKnockout(string binding) {
	<button class="btn" data-bind="click: function() { @(binding)('Nothing'); }, css: { active: @(binding)() == 'Nothing' }">@ViewRes.User.RatedSongsStrings.RatingAnything</button>
	<button class="btn" data-bind="click: function() { @(binding)('Like'); }, css: { active: @(binding)() == 'Like' }">
		<i class="icon-star"></i>
		@SongVoteRatingNames.Like
	</button>
	<button class="btn" data-bind="click: function() { @(binding)('Favorite'); }, css: { active: @(binding)() == 'Favorite' }">
		<i class="icon-heart"></i>
		@SongVoteRatingNames.Favorite
	</button>
}

@helper UserGrid(IEnumerable<IUserWithEmail> users, int columns) {
	
	<table>
		@{ int i = 0; }
	
		@foreach (var user in users) {
			if (i % columns == 0) {
				@Html.Raw("<tr>")
			}
			<td>
				@ProfileIcon(user, 20)
			</td>
			<td>
				@UserLink(user)
			</td>
			{ i++; }
			if (i % columns == 0) {
				@Html.Raw("</tr>")
			}
		}
		@if (i % columns != 0) {
			@Html.Raw("</tr>")
		}
	</table>
			
}

@helper UserIconLink(IUserWithEmail user, int size = ImageHelper.UserTinyThumbSize) {	
	<a href="@Url.UserDetails(user)">@ProfileIcon(user, size)<span>@(user != null ? user.Name : "")</span></a>
}

@helper UserIconLink(UserContract user, int size = ImageHelper.UserTinyThumbSize, bool userInfo = false) {	
	<a href="@Url.UserDetails(user)" title='@(userInfo && user != null ? (Translate.UserGroups[user.GroupId] + "\nJoined: " + user.CreateDate.ToShortDateString()) : "")'>@ProfileIcon(user, size)<span>@(user != null ? user.Name : "")</span></a>
}

@helper UserIconLink(UserForApiContract user, int size = ImageHelper.UserTinyThumbSize, bool userInfo = false) {
	<a href="@Url.UserDetails(user)" title='@(userInfo && user != null ? (Translate.UserGroups[user.GroupId] + "\nJoined: " + user.MemberSince.ToShortDateString()) : "")'>
		@ProfileIcon(user != null ? user.MainPicture.GetSmallestThumb(ImageSize.TinyThumb) : null, size)
		<span>@(user != null ? user.Name : "")</span>
	</a>
}

@helper UserIconLink(IUserWithEmail user, string name, int size = 20) {
	if	(user != null) {
		@UserIconLink(user, size)
	} else {
		@name	
	}
}

@helper UserLink(IUser user) {
	@Html.ActionLink(user.Name, "Profile", "User", new { id = user.Name }, null)
}

@helper UserLink(IUser user, string name) {
	if (user != null) {
		@UserLink(user)	
	} else {
		@name		
	}
}