@using System.Web.Mvc.Html;
@using VocaDb.Model.Domain;
@using Res = ViewRes.Song.EditStrings;
@inherits VocaDb.Web.Code.HelperPage

@* 
	Autocomplete box that allows selection of one item. When an item is selected, "clear" button will be displayed.
*@
@helper LockingAutoComplete(string bindingHandler, string binding, string textBinding = null, string valBinding = null, string extraBindings = null, EntryType entryType = EntryType.Undefined) {
	<input type="text" class="input-large" data-bind="@bindingHandler: @binding, visible: !@(valBinding ?? binding)()@(!string.IsNullOrEmpty(extraBindings) ? ", " + extraBindings : "")" placeholder="@ViewRes.SharedStrings.Search" />
	<div class="input-append" data-bind="visible: @(valBinding ?? binding)()" style="display: none;">
		@if (entryType != EntryType.Undefined) {
			<a href="#" class="btn btn-nomargin" data-bind="attr: { href: app.EntryUrlMapper.details('@entryType', @(valBinding ?? binding)()) }">
				<i class="icon icon-info-sign"></i>
			</a>
		}
		<input type="text" class="input-large" readonly data-bind="value: @(textBinding ?? binding)" />
		<button type="button" class="btn btn-danger" data-bind="click: function() { @(valBinding ?? binding)(null); }">@ViewRes.SharedStrings.Clear</button>
	</div>
}

@helper TagFilters(bool topGenres = false) {

	<!-- Viewmodel: TagFilters -->

	<!-- ko foreach: tags -->
	<div class="control-group">
		<div style="display: inline-block;" class="input-append input-prepend">
			<a href="#" class="btn btn-nomargin" data-bind="attr: { href: app.EntryUrlMapper.details_tag(id, urlSlug()) }">
				<i class="icon icon-info-sign"></i>
			</a>
			<div class="input-append">
				<input type="text" class="input-large" readonly data-bind="value: name" />
				<button type="button" class="btn btn-danger" data-bind="click: function() { $parent.tags.remove($data); }">Clear</button>
			</div>
		</div>
	</div>
	<!-- /ko -->

	<div data-bind="visible: tags().length">
		<label class="checkbox">
			<input type="checkbox" data-bind="checked: childTags" />
			@ViewRes.Search.IndexStrings.ChildTags
		</label>
	</div>

	<div>

		<input type="text" class="input-large" data-bind="tagAutoComplete: addTag" placeholder="@ViewRes.SharedStrings.Search" />
		
		@if (topGenres) {
		<div class="btn-group">
			<button class="btn dropdown-toggle btn-nomargin" data-toggle="dropdown">
				@ViewRes.Search.IndexStrings.TopGenres
				<span class="caret"></span>
			</button>
			<ul data-bind="foreach: $parent.genreTags" class="dropdown-menu" role="menu" aria-labelledby="dropdownMenu">
				<li>
					<a href="#" data-bind="attr: { href: app.EntryUrlMapper.details_tag_contract($data) }, text: name, click: function(selectedTag) { $parent.addTag(selectedTag); }"></a>
				</li>
			</ul>
		</div>
		}

	</div>

}

@helper WebLinksEditViewKnockout(bool showCategory = true) {
	<!-- binding context: WebLinksEditViewModel -->
	<table>
		<thead>
			<tr data-bind="visible: items && items().length">
				<th>
					@HelperRes.HelperStrings.WebLinkUrlTitle
					@Html.Partial("Partials/Shared/_RequiredField")
				</th>
				<th>@HelperRes.HelperStrings.WebLinkDescriptionTitle</th>
				@if (showCategory) {
					<th>@HelperRes.HelperStrings.WebLinkCategoryTitle</th>
				}
				<th>@Res.PvStatus</th>
				<th></th>
			</tr>
		</thead>
		<tbody data-bind="foreach: items">
			<tr>
				<td><input type="text" data-bind="value: url" maxlength="512" class="input-xlarge" /></td>
				<td><input type="text" data-bind="value: description" maxlength="512" /></td>
				@if (showCategory) {
					<td>
						<select data-bind="value: category, options: $parent.categories, optionsText: 'name', optionsValue: 'id'" class="input-medium"></select>
					</td>
				}
				<td>
					<label class="checkbox">
						<input type="checkbox" />
						@ViewRes.EntryEditStrings.PVUnavailable
					</label>
				</td>
				<td>
					<a href="#" class="textLink deleteLink" data-bind="click: $parent.remove">@ViewRes.SharedStrings.Delete</a>
				</td>
			</tr>
		</tbody>
	</table>

	<a href="#" class="textLink addLink" data-bind="click: add">@HelperRes.HelperStrings.WebLinkNewRow</a>
}
