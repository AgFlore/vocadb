@using VocaDb.Model.DataContracts.Albums;
@using VocaDb.Web.Helpers;
@model ComparedAlbumsContract

<div class="well well-transparent archived-entry-contents">
	<h4>Content</h4>

	<table class="table table-bordered">
		@ArchivedEntryHelpers.DataRow("Album Id", Model.FirstData.Id)
		@ArchivedEntryHelpers.PictureRow("Main picture", Model, id => Url.Action("ArchivedVersionCoverPicture", "Album", new { id }))
		@ArchivedEntryHelpers.DataRow("Main picture MIME", Model, d => d.MainPictureMime)
		@ArchivedEntryHelpers.TranslatedNameRow(Model, d => d.TranslatedName)
		@ArchivedEntryHelpers.DataRowList("Names", Model, d => DataFormatUtils.GenerateHtmlFromHelper(d.Names, ArchivedEntryHelpers.NameInfo))
		@ArchivedEntryHelpers.DataRow("Description", Model, d => d.Description, preserveLineBreaks: true)
		@ArchivedEntryHelpers.DataRow("Description (en)", Model, d => d.DescriptionEng, preserveLineBreaks: true)
		@ArchivedEntryHelpers.DataRow("Disc type", Model, d => Translate.DiscTypeName(d.DiscType))
		@ArchivedEntryHelpers.DataRow("Release date", Model, d => d.OriginalRelease != null && d.OriginalRelease.ReleaseDate != null && !d.OriginalRelease.ReleaseDate.IsEmpty ? ArchivedEntryHelpers.FormatReleaseDate(d.OriginalRelease.ReleaseDate) : string.Empty)
		@ArchivedEntryHelpers.DataRow("Catalog number", Model, d => d.OriginalRelease != null ? d.OriginalRelease.CatNum : string.Empty)
		@ArchivedEntryHelpers.DataRow("Release event", Model, d => ArchivedEntryHelpers.ObjectRefInfo(d.OriginalRelease != null ? d.OriginalRelease.ReleaseEvent : null))
		@ArchivedEntryHelpers.DataRowList("Barcodes", Model, d => DataFormatUtils.GenerateHtml(d.Identifiers, d2 => new MvcHtmlString(d2.Value)))
		@ArchivedEntryHelpers.DataRowList("External links", Model, d => DataFormatUtils.GenerateHtmlFromHelper(d.WebLinks, ArchivedEntryHelpers.WebLinkInfo))
		@ArchivedEntryHelpers.DataRowList("Artists", Model, d => DataFormatUtils.GenerateHtml(d.Artists != null ? d.Artists.OrderBy(a => a.NameHint) : null, artist => MvcHtmlString.Create(artist.NameHint + " [" + artist.Id + "] - IsSupport: " + artist.IsSupport + ", Roles: " + artist.Roles)))
		@ArchivedEntryHelpers.DataRowList("Discs", Model, d => DataFormatUtils.GenerateHtml(d.Discs != null ? d.Discs.OrderBy(s => s.DiscNumber) : null, disc => MvcHtmlString.Create(disc.DiscNumber + ": " + disc.Name + " (" + disc.MediaType + ") [" + disc.Id + "]")))
		@ArchivedEntryHelpers.DataRowList("Tracks", Model, d => DataFormatUtils.GenerateHtml(d.Songs != null ? d.Songs.OrderBy(s => s.DiscNumber).ThenBy(s => s.TrackNumber) : null, song => MvcHtmlString.Create("(Disc " + song.DiscNumber + ") " + song.TrackNumber + ". " + song.NameHint + " [" + song.Id + "]")))
		@ArchivedEntryHelpers.DataRowList("Pictures", Model, d => DataFormatUtils.GenerateHtmlFromHelper(d.Pictures, ArchivedEntryHelpers.PictureFileInfo))
		@ArchivedEntryHelpers.DataRowList("PVs", Model, d => DataFormatUtils.GenerateHtmlFromHelper(d.PVs, ArchivedEntryHelpers.PVInfo))
	</table>

</div>
