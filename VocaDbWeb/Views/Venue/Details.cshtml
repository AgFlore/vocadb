@using VocaDb.Web.Helpers;
@inherits VocaDb.Web.Code.VocaDbPage<VocaDb.Model.DataContracts.Venues.VenueDetailsContract>

@{

	var descriptionHtml = MarkdownParser.GetHtml(Model.Description);
	var descriptionStripped = MarkdownParser.GetPlainText(Model.Description);

	PageProperties.Description = descriptionStripped;

}

@section Toolbar {
	@Html.ActionLink(ViewRes.SharedStrings.Edit, "Edit", new { id = Model.Id }, new { id = "editVenueLink", @class = (Login.CanEdit(Model) ? "" : "disabled") })
	@Html.ActionLink(ViewRes.EntryDetailsStrings.ViewModifications, "Versions", new { id = Model.Id }, new { id = "viewVersions" })
	@Helpers.EntryStatusMessage(Model.Status)
}

<div class="media">
	<div class="media-body">
		@if (!string.IsNullOrEmpty(Model.Description)) {
			<p>@Html.Raw(descriptionHtml)</p>
		}
	</div>
	
	@if (Model.WebLinks.Any()) {
		@EntryDetailsHelpers.ExternalLinksList(Model.WebLinks, false)
		<br />
	}
	
	@if (!string.IsNullOrEmpty(Model.AdditionalNames)) {
		<p>
			@ViewRes.Venue.DetailsStrings.Aliases: @Model.AdditionalNames
		</p>		
	}
</div>

@section BodyScripts {
<script type="text/javascript">
	$(function () {
		$("#editVenueLink").button({ disabled: $("#editVenueLink").hasClass("disabled"), icons: { primary: 'ui-icon-wrench'} });
		$("#viewVersions").button({ icons: { primary: 'ui-icon-clock' } });
		$("#manageTags").button({ icons: { primary: 'ui-icon-wrench' } });
	});
</script>
}
