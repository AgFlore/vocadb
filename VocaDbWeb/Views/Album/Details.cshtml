@using System.Web.Optimization
@using VocaDb.Model.Domain.Security
@using VocaDb.Model.Domain.Songs
@using VocaDb.Model.Domain.Albums
@using VocaDb.Model.Domain.Images
@using VocaDb.Model.Helpers
@using VocaDb.Web.Helpers;
@using VocaDb.Web.Models;
@using R = ViewRes.Album;
@using Res = ViewRes.Album.DetailsStrings;
@inherits VocaDb.Web.Code.VocaDbPage<AlbumDetails>

@{
	ViewBag.Parents = new[] { Html.ActionLink(ViewRes.SharedStrings.Albums, "Index") };
	var url = PageProperties.CanonicalUrl;
}

@section Head {
	@HtmlHelpers.OpenGraphMetaTags(PageProperties)
	<link rel="canonical" href="@url" />
	@Styles.Render("~/Scripts/jqwidgets27/styles/css")
}

@section Toolbar {

	<a href="#" id="addAlbumLink" class="@(Login.Manager.IsLoggedIn ? "" : "disabled")" style="@(Model.UserHasAlbum ? "display: none;" : "")">@ViewRes.Album.DetailsStrings.AddToCollection</a>
	<a href="#" id="updateAlbumLink" class="@(Login.Manager.IsLoggedIn ? "" : "disabled")" style="@(Model.UserHasAlbum ? "" : "display: none;")">@ViewRes.Album.DetailsStrings.UpdateCollection</a>

	@Html.ActionLink(ViewRes.SharedStrings.Edit, "Edit", new { id = Model.Id }, new { id = "editAlbumLink", @class = (Model.CanEdit ? "" : "disabled") })

	@Html.ActionLink(ViewRes.EntryDetailsStrings.ViewModifications, "Versions", new { id = Model.Id }, new { id = "viewVersions" })

	<span>
		@Html.ActionLink(ViewRes.Album.DetailsStrings.DownloadTrackList, "DownloadTags", new { id = Model.Id }, new { id = "downloadTags" })
		<a data-bind="click: downloadTagsDialog.show" href="#" id="downloadTagsCustom">@R.DetailsStrings.Customize</a>
	</span>

	<a href="#" id="reportEntryLink" data-bind="click: reportViewModel.show">@ViewRes.EntryDetailsStrings.ReportAnError</a>

	@Helpers.EntryStatusMessage(Model.Status)
}

@if (Model.Deleted) {
	@EntryDetailsHelpers.DeletedBanner(Model.MergedTo)
}

@if (Model.Draft && !Model.Deleted) {
	@Helpers.DraftMessage("glalbums")
}

<div id="tabs" itemscope itemtype="http://schema.org/MusicAlbum" class="js-cloak" data-bind="show">

	<ul>
		<li><a href="#basicInfoTab">@ViewRes.EntryDetailsStrings.BasicInfoTab</a></li>
		<li data-tab="Discussion">
			<a href="#discussionTab">@ViewRes.EntryDetailsStrings.DiscussionTab (@Model.CommentCount)</a>
		</li>
		<li><a href="#picturesTab">@ViewRes.EntryDetailsStrings.PicturesTab (@(Model.Pictures.Length + 1))</a></li>
		<li><a href="@Url.Action("Related", "Album", new { id = Model.Id })">@R.DetailsStrings.RelatedAlbums</a></li>
		<li><a href="#shareTab">@R.DetailsStrings.Share</a></li>
	</ul>

	<div id="basicInfoTab">
		
		<div class="clearfix">
			<!-- Album cover picture -->
			<div class="pull-left">
				<div id="picCarousel" class="carousel slide">
					<div class="carousel-inner">
						<div class="active item thumbItem">
							@AlbumHelpers.CoverLink(Model)
						</div>
						@foreach (var pic in Model.Pictures) {
							<div class="item thumbItem" itemprop="image">
								@Helpers.EntryPictureFileLink(pic)
								@if (!string.IsNullOrEmpty(pic.Name)) {
									<div class="carousel-caption">
										<h4>@pic.Name</h4>
									</div>
								}
							</div>
						}
					</div>
					@if (Model.Pictures.Any()) {
						<a class="carousel-control left" href="#picCarousel" data-slide="prev">&lsaquo;</a>
						<a class="carousel-control right" href="#picCarousel" data-slide="next">&rsaquo;</a>
					}
				</div>

				@if (Model.RatingCount > 0) {
					<div itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
						<meta itemprop="ratingValue" content="@DecimalDot(Model.RatingAverage)" />
						@Helpers.StarsMeta(Model.RatingAverage, 5)<br />
						(<span itemprop="ratingCount">@Model.RatingCount</span> @ViewRes.Album.DetailsStrings.Ratings)
					</div>
				}			
			</div>

			<table class="properties">
				<tr>
					<td class="entry-field-label-col">@ViewRes.SharedStrings.Name</td>
					<td itemprop="name">
						@Model.Name<br />
						<span class="extraInfo">@Model.AdditionalNames</span>
					</td>
				</tr>

				@if (Model.Vocalists.Any()) {
					<tr>
						<td>@ViewRes.Album.DetailsStrings.Vocalists</td>
						<td class="artistList">
							@ArtistHelpers.ArtistList(Model.Vocalists, showType: true)
						</td>
					</tr>
				}

				@if (Model.Producers.Any()) {
					<tr>
						<td>@ViewRes.Album.DetailsStrings.Producers</td>
						<td class="artistList">
							@ArtistHelpers.ArtistList(Model.Producers, showRoles: Model.ShowProducerRoles)
						</td>
					</tr>
				}

				@if (Model.Bands.Any()) {
					<tr>
						<td>@Res.Band</td>
						<td class="artistList">
							@ArtistHelpers.ArtistList(Model.Bands)
						</td>
					</tr>
				}

				@if (Model.Circles.Any()) {
					<tr>
						<td>@ViewRes.Album.DetailsStrings.Circle</td>
						<td class="artistList">
							@ArtistHelpers.ArtistList(Model.Circles)
						</td>
					</tr>
				}

				@if (Model.Labels.Any()) {
					<tr>
						<td>@ViewRes.Album.DetailsStrings.Labels</td>
						<td class="artistList">
							@ArtistHelpers.ArtistList(Model.Labels)
						</td>
					</tr>
				}

				@if (Model.OtherArtists.Any()) {
					<tr>
						<td>@ViewRes.Album.DetailsStrings.OtherArtists</td>
						<td class="artistList">
							@ArtistHelpers.ArtistList(Model.OtherArtists, true)
						</td>
					</tr>
				}

				@if (!Model.Description.IsEmpty) {
					<tr>
						<td>@ViewRes.SharedStrings.Description</td>
						<td class="entry-description" data-bind="with: description">
							@{ Html.RenderPartial("Partials/_EnglishTranslatedString", Model.Description); }
						</td>
					</tr>
				}

				<tr>
					<td>@ViewRes.SharedStrings.Type</td>
					<td>
						@Html.ActionLink(Translate.DiscTypeName(Model.DiscType), "Index", new { discType = Model.DiscType })<br />
					</td>
				</tr>

				<tr>
					<td>@ViewRes.SharedStrings.Tags</td>
					<td>
						<div data-bind="with: tagUsages" class="entry-tag-usages">
							@{ Html.RenderPartial("Partials/_TagList"); }
						</div>
						<a data-bind="jqButton: { disabled: @ToJS(!Login.Manager.IsLoggedIn), icon: 'ui-icon-tag' }, click: tagsEditViewModel.show" href="#">@ViewRes.EntryDetailsStrings.EditTags</a>
						@if (Model.CanRemoveTagUsages) {
							@Html.ActionLink(ViewRes.EntryDetailsStrings.ManageTags, "ManageTagUsages", new { id = Model.Id }, new { id = "manageTags" })
						}
					</td>
				</tr>

				@if (Model.ReleaseDate != null && !Model.ReleaseDate.IsEmpty) {
					<tr>
						<td>@ViewRes.Album.DetailsStrings.ReleaseDate</td>
						<td>
							@Model.ReleaseDate.Formatted
							@if (Model.ReleaseDateIsInThePast) {
								<small class="muted">@Res.ReleaseDateIsInThePast</small>
							}
							@if (Model.ReleaseDateIsInTheNearFuture) {
								<small class="muted">@Res.ReleaseDateIsInTheNearFuture</small>
							}
							@if (Model.ReleaseDateIsInTheFarFuture) {
								<small class="muted">@Res.ReleaseDateIsInTheFarFuture</small>
							}
							<br />
						</td>
					</tr>
				}

				@if (!string.IsNullOrEmpty(Model.CatNum)) {
					<tr>
						<td>@ViewRes.Album.DetailsStrings.CatalogNumber</td>
						<td>
							@Model.CatNum<br />
						</td>
					</tr>
				}

				@if (Model.ReleaseEvent != null) {
					<tr>
						<td>@ViewRes.Album.DetailsStrings.ReleaseEvent</td>
						<td>
							@Html.ActionLink(Model.ReleaseEvent.Name, "Details", "Event", new { id = Model.ReleaseEvent.Id, slug = Model.ReleaseEvent.UrlSlug }, null)<br />
						</td>
					</tr>
				}

				@if (Model.PVs.Any()) {
					<tr>
						<td>@Res.PVs</td>
						<td>
							@foreach (var pv in Model.PVs) {
								@Helpers.FormatPVLink(pv, false)<br />
							}
						</td>
					</tr>
				}

				@EntryDetailsHelpers.ExternalLinksRows(Model.WebLinks)

				<tr>
					<td>@ViewRes.EntryDetailsStrings.Stats</td>
					<td>
						<a href="#" id="statsLink" data-bind="click: getUsers">
							@string.Format(ViewRes.EntryDetailsStrings.Hits, Model.Hits).
							@string.Format(R.DetailsStrings.OwnedBy, Model.OwnedBy). @string.Format(R.DetailsStrings.WishlistedBy, Model.WishlistedBy).
						</a>
					</td>
				</tr>

				<tr>
					<td>@ViewRes.EntryDetailsStrings.AdditionDate</td>
					<td>
						@Helpers.UniversalTimeLabel(Model.CreateDate)
					</td>
				</tr>
			</table>
		</div>

		<h3>
			@Res.Tracklist
			@if (Model.TotalLength != TimeSpan.Zero) {
				<small>(@string.Format(Res.TotalLength, DateTimeHelper.FormatMinSec(Model.TotalLength)))</small>
			}
		</h3>
		<div class="tracklist">
			@foreach (var disc in Model.Discs) {
				if (Model.Discs.Length > 1) {
					<h4>
						@Res.Disc @disc.DiscNumber
						@if (!string.IsNullOrEmpty(disc.Name)) {
							@:- @disc.Name
						}
						@if (disc.TotalLength != TimeSpan.Zero) {
							<small>(@DateTimeHelper.FormatMinSec(disc.TotalLength))</small>
						}
						@if (disc.IsVideo) {
							<i class="icon-film" title="@Resources.AlbumDiscMediaTypeNames.Video"></i>
						}
					</h4>
				}
				<ul>
					@foreach (var song in disc.Songs) {
						<li class="tracklist-track">
							<div class="tracklist-trackNumber">
								@song.TrackNumber
							</div>
							<div class="tracklist-trackTitle">
								@if (song.Song != null) {
									<span data-bind="songToolTip: @song.Song.Id">
										@SongHelpers.SongLink(song.Song, Model.Id)
									</span>
									if (song.Song.LengthSeconds > 0) {
										@(" (" + DateTimeUtils.FormatFromSeconds(song.Song.LengthSeconds) + ")")
									}
									@:&nbsp;
									@Helpers.DraftIcon(song.Song.Status)
									if (song.Song.SongType != SongType.Original && song.Song.SongType != SongType.Unspecified) {
										@SongHelpers.SongTypeLabel(song.Song.SongType)
									}
									@Helpers.PVServiceIcons(song.Song.PVServices)
									<br />
									<small class="muted">@song.Song.ArtistString</small>
								} else {
									@song.Name
								}
							</div>
						</li>
					}
				</ul>
			}
		</div>

		@if (!Model.Discs.Any()) {
			<p>@Res.NoTracklist</p>
		}

		@if (Model.PrimaryPV != null) {
			<div class="song-pv-player">
				@Helpers.EmbedPV(Model.PrimaryPV)
			</div>
		}

		@CommentHelpers.LatestCommentsKnockout()

		<p>
			<a href="#" id="viewCommentsLink">@ViewRes.EntryDetailsStrings.ViewAllComments</a>
		</p>

	</div>

	<div id="discussionTab" data-bind="with: comments">
		@CommentHelpers.EditableComments(UserContext.HasPermission(PermissionToken.CreateComments), well: false)
	</div>

	<div id="picturesTab">

		<ul class="thumbs">
			@Helpers.ThumbItem(Url.Action("CoverPicture", "Album", new { id = Model.Id, v = Model.Version }),
				Url.ImageThumb(Model, ImageSize.Thumb),
				ViewRes.Album.DetailsStrings.CoverPicture)
			@foreach (var pic in Model.Pictures) {
				@Helpers.ThumbItem(Url.EntryPictureFile(pic, ImageSize.Original), Url.EntryPictureFile(pic, ImageSize.Thumb), pic.Name)
			}
		</ul>

	</div>

	<div id="shareTab">
		<div>
			<label>
				@ViewRes.EntryDetailsStrings.Social<br />
				@EntryDetailsHelpers.LargeShareLinks(PageProperties.Title, url)
				<br /><br />
			</label>
		</div>		
		<div>
			@ViewRes.EntryDetailsStrings.Link<br />
			<input type="text" value="@url" class="input-large" onclick="this.select();" />
		</div>
		<div>
			<a href="http://daringfireball.net/projects/markdown/">Markdown</a><br />
			<input type="text" value="@VocaDb.Model.Service.Helpers.MarkdownHelper.CreateMarkdownLink(url, Model.Name)" class="input-xxlarge" onclick="this.select();" />
		</div>
	</div>

</div>

<div data-bind="with: tagsEditViewModel">
	@{ Html.RenderPartial("Partials/_TagsEdit"); }
</div>

<div id="userCollectionsPopup" title="@R.DetailsStrings.AlbumInCollections">

	<div data-bind="html: usersContent"></div>

</div>

@{ Html.RenderPartial("Partials/_DownloadTagsDialog"); }

@AlbumHelpers.EditCollectionDialog(Model.AlbumPurchaseStatus, Model.AlbumMediaType)

@EntryDetailsHelpers.ReportEntryPopupKnockout()

@section BodyScripts {
	@Scripts.Render("~/bundles/Album/Details", "~/bundles/jqxRating")
	<script type="text/javascript">

		$(document).ready(function() {

			moment.locale('@Culture');

			var urlMapper = new vdb.UrlMapper("@Url.Content("~/")");
			var repoFactory = new vdb.repositories.RepositoryFactory(urlMapper, @LanguagePreferenceInt, @UserContext.LoggedUserId);
			var albumRepo = repoFactory.albumRepository();
			var userRepo = repoFactory.userRepository();

			vdb.resources.album = {
				addedToCollection: @ToJS(AjaxRes.AlbumStrings.AddedToCollection)
				};
			vdb.resources.albumDetails = @Html.Raw(JsonHelpers.Serialize(new { download = AjaxRes.AlbumStrings.Download }));

			var reportTypes = @ToJS(Translate.AlbumReportTypeNames.Select(r => new {
				r.Id,
				r.Name,
				NotesRequired = AlbumReport.ReportTypesWithRequiredNotes.Contains(r.Id)
			}));

			var jsonModel = @Html.Raw(Model.Json);
			var formatString = '@(Login.Manager.IsLoggedIn ? Login.User.AlbumFormatString : "")';
			var canDeleteAllComments = @ToJS(UserContext.HasPermission(PermissionToken.DeleteComments));
			var viewModel = new vdb.viewModels.AlbumDetailsViewModel(albumRepo, userRepo, jsonModel,
				reportTypes,
				@UserContext.LoggedUserId,
				canDeleteAllComments, formatString, @ToJS(Model.Description.ShowEnglish(UserContext.LanguagePreference)));
			ko.applyBindings(viewModel);

			initPage(@Model.Id, @Model.CollectionRating,
				"@ViewRes.SharedStrings.Save", urlMapper, viewModel);

		});

	</script>
}